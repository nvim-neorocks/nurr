name: test pr
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  # computes what plugins to test against
  prepare:
    runs-on: ubuntu-latest
    outputs:
      plugins: ${{ steps.json.outputs.plugins }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
      - run: nix profile install nixpkgs#python3Packages.jsondiff
      - name: build matrix of plugins to test
        id: json
        run: |

          git fetch origin ${{github.base_ref}}
          git show origin/${{github.base_ref}}:plugins.json > plugins-old.json

          echo "testing diff.json"
          jdiff plugins-old.json plugins.json > diff.json

          jq '.plugins."$insert"[][1]' diff.json > ./new.json

          echo "New plugins added in this PR:"
          cat new.json

          # always run the tests for the first available plugin
          jq .plugins[0] plugins.json > first.json

          # concatenate the new plugins with the first one
          jq -s . new.json first.json > matrix.json

          # for debug
          echo "cat matrix.json"
          cat matrix.json

          echo "plugins=$(jq -c . < ./matrix.json)" >> $GITHUB_OUTPUT

  test-generated-matrix:
    runs-on: ubuntu-latest
    needs: [ prepare ]
    steps:
    - name: test generated matrix
      run: |
        echo "Hello world"
        echo '${{ toJSON(needs.prepare.outputs) }}'
        echo ${{ needs.prepare.outputs.plugins }}

  test-pr:
    runs-on: ubuntu-latest
    needs: [ prepare ]
    strategy:
      matrix:
        plugin: ${{ fromJSON(needs.prepare.outputs.plugins) }}
    steps:
    - name: Install Lua
      if: ${{ env.RELEASE_VERSION != '' }}
      uses: leso-kn/gh-actions-lua@master
      with:
        luaVersion: "5.1"

    # actions/checkout doesn't clone git repos external to github. this is a trick to do so
    # https://github.com/actions/checkout/issues/24#issuecomment-1234831235
    # - name: override remote if needed
    #   if: startWith('https', ${{ matrix.plugin.name }})
    #   run: |
    #     git config --global url.https://git.sr.ht.insteadOf git://github.com/

    - name: Checkout plugin repository from github
      if: ${{ startsWith( matrix.plugin.name, 'https://git.sr.ht') == false }}
      uses: actions/checkout@v4
      with:
        repository: ${{ matrix.plugin.name }}
        ref: ${{ matrix.plugin.ref }}
        path: .

    - name: Clone from sr.ht
      if: ${{ startsWith(env.REPOSITORY_URL, 'https://git.sr.ht') }}
      run: |
        git clone ${{ matrix.plugin.ref }}

    - run: |
        echo "GITHUB_REPOSITORY_OVERRIDE=${{ matrix.plugin.name }}" >> $GITHUB_ENV
        echo "GITHUB_SHA_OVERRIDE=$(git rev-parse HEAD)" >> $GITHUB_ENV

    - name: Convert JSON list to multiline string
      id: convert
      run: |
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        {
          echo "multiline<<EOF"
          echo -e "${{ join(matrix.plugin.dependencies, '\n') }}"
          echo EOF
        } >> "$GITHUB_OUTPUT"

    - name: Publish Development LuaRock
      uses: nvim-neorocks/luarocks-tag-release@teto-ability-override-url
      env:
        LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
      with:
        name: ${{ matrix.plugin.shorthand }}
        dependencies: ${{ steps.convert.outputs.multiline }}
        version: "scm"
        summary: ${{ matrix.plugin.summary }}
        license: ${{ matrix.plugin.license }}
        labels: neovim
        copy_directories: |
          {{ neovim.plugin.dirs }}
          ${{ matrix.plugin.extra_directories }}
        extra_luarocks_args: |
          --namespace=neorocks
          --force
          --dev
